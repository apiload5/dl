# SaveMedia Complete Setup - AWS Compatible (No Invalid Options)
# Compatible with AWS Elastic Beanstalk PHP 8.1 Platform

option_settings:
  # Environment Configuration (ONLY VALID OPTIONS)
  aws:elasticbeanstalk:environment:
    EnvironmentType: SingleInstance
    
  # Instance Configuration  
  aws:autoscaling:launchconfiguration:
    InstanceType: t3.medium
    DisableIMDSv1: true
    
  # Health Reporting
  aws:elasticbeanstalk:healthreporting:system:
    SystemType: enhanced
    HealthCheckSuccessThreshold: Ok
    
  # Application Environment Variables
  aws:elasticbeanstalk:application:environment:
    APP_ENV: production
    APP_DEBUG: false
    
  # CloudWatch Logs
  aws:elasticbeanstalk:cloudwatch:logs:
    StreamLogs: true
    DeleteOnTerminate: false
    RetentionInDays: 7

# Package Installation
packages:
  yum:
    git: []
    wget: []
    curl: []
    python3: []
    python3-pip: []
    epel-release: []

# Files Configuration
files:
  # PHP Custom Configuration (ALL PHP SETTINGS VIA FILES)
  "/etc/php.d/99-savemedia.ini":
    mode: "000644"
    owner: root
    group: root
    content: |
      ; SaveMedia PHP Configuration - All Settings Here
      memory_limit = 512M
      max_execution_time = 300
      max_input_time = 300
      post_max_size = 100M
      upload_max_filesize = 100M
      max_file_uploads = 20
      allow_url_fopen = On
      enable_dl = Off
      expose_php = Off
      log_errors = On
      error_log = /var/log/php_errors.log
      
      ; Session Configuration
      session.gc_maxlifetime = 3600
      session.cookie_httponly = 1
      session.use_strict_mode = 1
      session.cookie_secure = 0
      
      ; File Upload Settings
      file_uploads = On
      
      ; Output Settings
      output_buffering = 4096
      
      ; Security Settings
      disable_functions = ""
      
      ; Default socket timeout
      default_socket_timeout = 60
      
  # Nginx Custom Configuration
  "/etc/nginx/conf.d/savemedia.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # SaveMedia Nginx Configuration
      server {
          listen 80;
          server_name _;
          root /var/www/html;
          index index.php index.html;
          
          # Security Headers
          add_header X-Frame-Options DENY always;
          add_header X-Content-Type-Options nosniff always;
          add_header X-XSS-Protection "1; mode=block" always;
          add_header Referrer-Policy "strict-origin-when-cross-origin" always;
          
          # CORS Headers
          add_header Access-Control-Allow-Origin "*" always;
          add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
          add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
          
          # Client Settings for Large Uploads
          client_max_body_size 100M;
          client_body_timeout 300s;
          client_header_timeout 60s;
          client_body_buffer_size 128k;
          
          # Gzip Compression
          gzip on;
          gzip_vary on;
          gzip_min_length 1024;
          gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
          
          # Handle OPTIONS requests (CORS)
          if ($request_method = 'OPTIONS') {
              add_header Access-Control-Allow-Origin "*";
              add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
              add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
              add_header Content-Length 0;
              add_header Content-Type text/plain;
              return 200;
          }
          
          # PHP Processing
          location ~ \.php$ {
              try_files $uri =404;
              fastcgi_pass unix:/var/run/php-fpm/www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
              fastcgi_read_timeout 300;
              fastcgi_send_timeout 300;
              fastcgi_connect_timeout 60;
              fastcgi_buffer_size 128k;
              fastcgi_buffers 4 256k;
              fastcgi_busy_buffers_size 256k;
          }
          
          # API Routes
          location ^~ /api/ {
              try_files $uri $uri/ @api;
          }
          
          location @api {
              rewrite ^/api/(.*)$ /api/$1.php last;
          }
          
          # Health Check
          location = /health {
              try_files $uri /api/health.php;
              access_log off;
          }
          
          # Static Files Caching
          location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
              expires 30d;
              add_header Cache-Control "public, no-transform";
              access_log off;
          }
          
          # Security - Deny Access to Sensitive Files
          location ~ /\.(ht|git|svn) {
              deny all;
              access_log off;
              log_not_found off;
          }
          
          location ~ /(config|includes)/ {
              deny all;
              access_log off;
              log_not_found off;
          }
          
          location ~ /\.ebextensions/ {
              deny all;
              access_log off;
              log_not_found off;
          }
      }
      
  # YT-DLP Installation Script
  "/opt/elasticbeanstalk/hooks/appdeploy/post/01_install_ytdlp.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # YT-DLP Installation Script
      
      echo "Installing yt-dlp..."
      
      # Update pip
      python3 -m pip install --upgrade pip
      
      # Install yt-dlp globally
      python3 -m pip install --upgrade yt-dlp
      
      # Create symlinks
      ln -sf /usr/local/bin/yt-dlp /usr/bin/yt-dlp || true
      
      # Set permissions
      chmod +x /usr/local/bin/yt-dlp 2>/dev/null || true
      chmod +x /usr/bin/yt-dlp 2>/dev/null || true
      
      # Verify installation
      if yt-dlp --version; then
          echo "yt-dlp installed successfully"
      else
          echo "yt-dlp installation failed, trying alternative method..."
          # Alternative installation
          pip3 install --user yt-dlp
          ln -sf ~/.local/bin/yt-dlp /usr/bin/yt-dlp || true
      fi
      
  # FFmpeg Installation Script
  "/opt/elasticbeanstalk/hooks/appdeploy/post/02_install_ffmpeg.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/bin/bash
      # FFmpeg Installation Script
      
      echo "Installing FFmpeg..."
      
      # Install EPEL repository
      amazon-linux-extras install epel -y 2>/dev/null || yum install -y epel-release
      
      # Install RPM Fusion repository
      yum install -y https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm 2>/dev/null || echo "RPM Fusion setup attempted"
      
      # Update package list
      yum update -y
      
      # Install FFmpeg
      yum install -y ffmpeg ffmpeg-devel 2>/dev/null || {
          echo "FFmpeg installation from repository failed, trying alternative..."
          
          # Alternative: Install from static build
          cd /tmp
          wget -q https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          
          if [ -f ffmpeg-release-amd64-static.tar.xz ]; then
              tar -xf ffmpeg-release-amd64-static.tar.xz
              find . -name "ffmpeg-*-amd64-static" -type d -exec cp {}/ffmpeg /usr/local/bin/ \;
              find . -name "ffmpeg-*-amd64-static" -type d -exec cp {}/ffprobe /usr/local/bin/ \;
              
              # Create symlinks
              ln -sf /usr/local/bin/ffmpeg /usr/bin/ffmpeg
              ln -sf /usr/local/bin/ffprobe /usr/bin/ffprobe
              
              # Set permissions
              chmod +x /usr/local/bin/ffmpeg
              chmod +x /usr/local/bin/ffprobe
              
              echo "FFmpeg installed from static build"
          else
              echo "FFmpeg installation failed completely"
          fi
          
          # Cleanup
          rm -rf /tmp/ffmpeg-*
      }
      
      # Verify installation
      if ffmpeg -version; then
          echo "FFmpeg installed successfully"
      else
          echo "FFmpeg installation verification failed"
      fi

# Commands - System Setup
commands:
  01_update_system:
    command: |
      # Update system packages
      yum update -y
    ignoreErrors: true
    
  02_install_python_packages:
    command: |
      # Install Python packages
      python3 -m pip install --upgrade pip setuptools wheel
    ignoreErrors: true
    
  03_create_directories:
    command: |
      # Create necessary directories
      mkdir -p /tmp/downloads /var/log/savemedia /opt/savemedia
      chmod 777 /tmp/downloads
      chmod 755 /var/log/savemedia
      chmod 755 /opt/savemedia
    ignoreErrors: true
    
  04_setup_permissions:
    command: |
      # Set up proper permissions
      chown -R webapp:webapp /tmp/downloads /var/log/savemedia /opt/savemedia 2>/dev/null || true
      
      # Create log files
      touch /var/log/php_errors.log /var/log/savemedia/app.log
      chmod 666 /var/log/php_errors.log /var/log/savemedia/app.log
      chown webapp:webapp /var/log/php_errors.log /var/log/savemedia/app.log 2>/dev/null || true
    ignoreErrors: true

# Container Commands - Service Configuration
container_commands:
  01_backup_configs:
    command: |
      # Backup original configurations
      cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup 2>/dev/null || true
      cp /etc/php-fpm.conf /etc/php-fpm.conf.backup 2>/dev/null || true
    ignoreErrors: true
    
  02_configure_php_fpm:
    command: |
      # Configure PHP-FPM for better performance
      sed -i 's/pm.max_children = 5/pm.max_children = 10/' /etc/php-fpm.d/www.conf 2>/dev/null || true
      sed -i 's/pm.start_servers = 2/pm.start_servers = 3/' /etc/php-fpm.d/www.conf 2>/dev/null || true
      sed -i 's/pm.min_spare_servers = 1/pm.min_spare_servers = 2/' /etc/php-fpm.d/www.conf 2>/dev/null || true
      sed -i 's/pm.max_spare_servers = 3/pm.max_spare_servers = 5/' /etc/php-fpm.d/www.conf 2>/dev/null || true
    ignoreErrors: true
    
  03_test_nginx_config:
    command: "nginx -t"
    ignoreErrors: true
    
  04_restart_services:
    command: |
      # Restart services in proper order
      service php-fpm restart
      sleep 2
      service nginx reload
    ignoreErrors: true
    
  05_verify_installation:
    command: |
      # Verify all installations
      echo "=== Installation Verification ==="
      
      echo "PHP Version:"
      php --version
      
      echo "YT-DLP Status:"
      yt-dlp --version 2>/dev/null || echo "yt-dlp not found"
      
      echo "FFmpeg Status:"
      ffmpeg -version 2>/dev/null | head -1 || echo "ffmpeg not found"
      
      echo "Nginx Status:"
      nginx -v
      
      echo "Disk Space:"
      df -h /tmp
      
      echo "=== Verification Complete ==="
    ignoreErrors: true
