# Nginx Configuration
files:
  "/etc/nginx/conf.d/01-savemedia.conf":
    mode: "000644"
    owner: root
    group: root
    content: |
      # SaveMedia Nginx Configuration
      server {
          listen 80 default_server;
          server_name _;
          root /var/www/html;
          index index.php index.html;
          
          # Security headers
          add_header X-Frame-Options DENY always;
          add_header X-Content-Type-Options nosniff always;
          add_header X-XSS-Protection "1; mode=block" always;
          add_header Referrer-Policy "strict-origin-when-cross-origin" always;
          
          # Gzip compression
          gzip on;
          gzip_vary on;
          gzip_min_length 1024;
          gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
          
          # Client settings
          client_max_body_size 100M;
          client_body_timeout 60s;
          client_header_timeout 60s;
          
          # PHP handling
          location ~ \.php$ {
              fastcgi_pass unix:/var/run/php-fpm/www.sock;
              fastcgi_index index.php;
              fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              include fastcgi_params;
              fastcgi_read_timeout 300;
              fastcgi_send_timeout 300;
          }
          
          # API routes
          location /api/ {
              try_files $uri $uri/ /api/index.php?$query_string;
          }
          
          # Static files
          location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
              expires 1y;
              add_header Cache-Control "public, immutable";
          }
          
          # Health check
          location /health {
              access_log off;
              try_files $uri /api/health.php;
          }
          
          # Security - deny access to sensitive files
          location ~ /\. {
              deny all;
          }
          
          location ~ /(config|includes)/ {
              deny all;
          }
      }

container_commands:
  01_reload_nginx:
    command: "service nginx reload"
    ignoreErrors: true
