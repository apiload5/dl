location / {
    # Nginx ko batata hai ki pehle index.php dhoondo
    index index.php index.html index.htm;
    
    # Agar index.php nahi mila, toh request ko index.php par forward karo
    try_files $uri $uri/ /index.php?$args;
}
```eof

### 2. Application Files (Old Files)

Yeh wohi files hain jo maine pehle di thi. Inhe ZIP file ke **root** mein rakhein.

**File Path:** **`index.php`**
```php:Index Page (Main Logic):index.php
<?php
// PHP Configuration and Core Logic

// External API Configuration (API aur Ad URL ko constants bana diya gaya gaya hai)
const API_BASE_URL = 'https://backend.savemedia.online';
const AD_REDIRECT_URL = 'https://otieu.com/4/10068616';

// Global variables to store state
$videoUrl = $_POST['videoUrl'] ?? $_GET['videoUrl'] ?? '';
$downloadFormatId = $_GET['format_id'] ?? '';
$videoInfo = null;
$error = null;
$success = null;

// CSS file ka naam jise hum link karenge
const CSS_FILE = 'style.css';

/**
 * Executes a cURL request to the external API.
 * * NOTE: PHP's cURL extension MUST be enabled in the Beanstalk environment.
 */
function makeApiRequest(string $endpoint, array $data = [], bool $isDownload = false)
{
    $ch = curl_init(API_BASE_URL . $endpoint);
    
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HTTPHEADER, ['Content-Type: application/json', 'Accept: application/json']);
    
    if ($data) {
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
    }
    
    if ($isDownload) {
        curl_setopt($ch, CURLOPT_HEADER, false);
    }
    
    $response = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    $curlError = curl_error($ch);
    curl_close($ch);
    
    if ($curlError) {
        return ['error' => 'API Error (CURL): ' . $curlError];
    }
    if ($httpCode !== 200) {
        $decoded = json_decode($response, true);
        $errorMessage = $decoded['error'] ?? 'API returned status code ' . $httpCode;
        return ['error' => $errorMessage];
    }
    
    return $response;
}

// 1. Handle Download Request (Triggered by a GET request with format_id)
if ($downloadFormatId && $videoUrl) {
    $downloadResponse = makeApiRequest('/download', [
        'url' => $videoUrl, 
        'format_id' => $downloadFormatId,
        'quality' => $_GET['quality'] ?? 'Unknown'
    ], true);

    if (is_array($downloadResponse) && isset($downloadResponse['error'])) {
        header("Location: index.php?error=" . urlencode("Download failed: " . $downloadResponse['error']) . "&videoUrl=" . urlencode($videoUrl));
        exit;
    }

    // Stream the file content to the user
    header('Content-Type: application/octet-stream');
    header('Content-Disposition: attachment; filename="video_download_' . time() . '.mp4"');
    header('Content-Length: ' . strlen($downloadResponse));
    echo $downloadResponse;
    exit;
}

// 2. Handle Info Request (Triggered by a POST request)
if ($_SERVER['REQUEST_METHOD'] === 'POST' && $videoUrl) {
    $apiResponse = makeApiRequest('/info', ['url' => $videoUrl]);
    
    if (is_array($apiResponse) && isset($apiResponse['error'])) {
        $error = $apiResponse['error'];
    } else {
        $data = json_decode($apiResponse, true);
        
        if (json_last_error() !== JSON_ERROR_NONE || isset($data['error'])) {
            $error = $data['error'] ?? 'Failed to decode API response.';
        } else {
            $videoInfo = $data;
            $success = 'Formats loaded successfully! Click on any format to download.';
        }
    }
}

// Handle error message passed via GET redirect
if (isset($_GET['error'])) {
    $error = $_GET['error'];
}

// --- Helper Functions for HTML Rendering ---

function formatNumber($num): string
{
    if (!is_numeric($num)) return 'Unknown';
    if ($num >= 1000000) {
        return round($num / 1000000, 1) . 'M';
    } elseif ($num >= 1000) {
        return round($num / 1000, 1) . 'K';
    }
    return (string)$num;
}

function sortFormatsByQuality(array $formats): array
{
    $qualityOrder = [
        '1080p' => 0, '720p' => 1, '480p' => 2, '360p' => 3, '240p' => 4, 
        '144p' => 5, 'mp3' => 6
    ];

    usort($formats, function($a, $b) use ($qualityOrder) {
        $qualityA = strtolower($a['quality'] ?? '');
        $qualityB = strtolower($b['quality'] ?? '');

        $orderA = $qualityOrder[$qualityA] ?? 999;
        $orderB = $qualityOrder[$qualityB] ?? 999;

        return $orderA <=> $orderB;
    });

    return $formats;
}

function generateFormatsList(?array $formats, string $videoUrl): string
{
    $output = '';
    
    if (empty($formats)) {
        $formats = [
            ['quality' => '720p', 'format_id' => 'best[height<=720]', 'filesize' => 'HD Quality', 'ext' => 'mp4', 'format_note' => 'Adaptive Stream'],
            ['quality' => '360p', 'format_id' => 'best[height<=360]', 'filesize' => 'Medium Quality', 'ext' => 'mp4', 'format_note' => 'Adaptive Stream'],
            ['quality' => 'MP3 Audio', 'format_id' => 'bestaudio', 'filesize' => 'Audio Only', 'ext' => 'mp3', 'format_note' => 'Audio Only']
        ];
    }
    
    $sortedFormats = sortFormatsByQuality($formats);
    
    foreach ($sortedFormats as $format) {
        $quality = htmlspecialchars($format['quality'] ?? 'Best Quality');
        $size = htmlspecialchars($format['filesize'] ?? 'Size unknown');
        $formatId = htmlspecialchars($format['format_id'] ?? 'best');
        $ext = strtoupper(htmlspecialchars($format['ext'] ?? 'MP4'));
        $formatNote = htmlspecialchars($format['format_note'] ?? '');
        $noteHtml = $formatNote ? 'â€¢ ' . $formatNote : '';
        
        $downloadLink = 'index.php?videoUrl=' . urlencode($videoUrl) . '&format_id=' . urlencode($formatId) . '&quality=' . urlencode($quality);

        $output .= '
            <div class="format-card">
                <div class="format-quality">' . $quality . '</div>
                <div class="format-size">' . $size . '</div>
                <div class="format-type" style="color: #888; font-size: 0.8rem; margin-bottom: 10px;">
                    ' . $ext . ' ' . $noteHtml . '
                </div>
                <button class="download-btn" onclick="startDownload(\'' . $downloadLink . '\', \'' . $quality . '\')">
                    Download ' . $quality . '
                </button>
            </div>
        ';
    }
    return $output;
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Free Video Downloader - Download Videos from 1000+ Platforms</title>
    
    <link href="https://fonts.googleapis.com/css2?family=Fredoka:wght@300;400;500;600;700&family=Josefin+Sans:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <link rel="stylesheet" href="<?= CSS_FILE ?>"> 
</head>
<body>
    <section class="video-downloader-section">
        <div class="video-downloader-container">
            <header class="video-downloader-header" onclick="goToHomepage()">
                <h1>Free Video Downloader</h1>
                <p>Download videos from YouTube, Facebook, Instagram, TikTok & 1000+ more platforms!</p>
            </header>

            <div class="ad-banner-top">
                Adsterra Banner 728x90
            </div>

            <div class="download-form-container">
                <h2 class="form-title">Free Online Video Downloader</h2>
                
                <form method="POST" action="index.php">
                    <div class="form-group">
                        <input type="url" class="url-input" id="videoUrl" name="videoUrl" 
                               placeholder="Paste video URL here..." 
                               value="<?= htmlspecialchars($videoUrl) ?>" required>
                        <button type="submit" class="fetch-btn" id="fetchBtn">
                            Download
                        </button>
                    </div>
                </form>
                
                <p class="policy-text">By using our service you accept our Terms of Service and Privacy Policy.</p>
                
                <div id="errorContainer" class="error-container" style="display: <?= $error ? 'block' : 'none'; ?>">
                    <?= htmlspecialchars($error) ?>
                </div>
                <div id="successContainer" class="success-container" style="display: <?= $success ? 'block' : 'none'; ?>">
                    <?= htmlspecialchars($success) ?>
                </div>

                <div class="result-container" id="resultContainer" style="display: <?= $videoInfo ? 'block' : 'none'; ?>">
                    <div class="video-preview">
                        <div class="thumbnail-container">
                            <img id="videoThumbnail" 
                                 src="<?= htmlspecialchars($videoInfo['thumbnail'] ?? 'https://via.placeholder.com/200x120/667eea/white?text=No+Thumbnail') ?>" 
                                 alt="Video Thumbnail" class="thumbnail" 
                                 onerror="this.src='https://via.placeholder.com/200x120/667eea/white?text=No+Thumbnail'">
                            <div class="video-info">
                                <h3><?= htmlspecialchars($videoInfo['title'] ?? 'Video Title') ?></h3>
                                <p>Duration: <?= htmlspecialchars($videoInfo['duration'] ?? 'Loading...') ?></p>
                                <p>Uploader: <?= htmlspecialchars($videoInfo['uploader'] ?? 'Loading...') ?></p>
                                <p>Views: <?= formatNumber($videoInfo['view_count'] ?? 0) ?></p>
                            </div>
                        </div>
                    </div>
                    
                    <div class="formats-section">
                        <h4>Available Formats</h4>
                        <div id="formatsList" class="formats-grid">
                            <?= generateFormatsList($videoInfo['formats'] ?? [], $videoUrl) ?>
                        </div>
                    </div>
                </div>
            </div>

            <div class="ad-banner-middle">
                Adsterra Banner 728x90
            </div>

            <div class="faq-section">
                <h2>Frequently Asked Questions</h2>
                
                <div class="faq-item">
                    <div class="faq-question">How to download videos using this tool?</div>
                    <div class="faq-answer">
                        <ol>
                            <li>Copy the video URL from YouTube, Facebook, Instagram, etc.</li>
                            <li>Paste the URL in the input box above</li>
                            <li>Click "Download" button</li>
                            <li>Select your preferred quality and format</li>
                            <li>Click "Download" and wait for the download to start</li>
                        </ol>
                    </div>
                </div>

                <div class="faq-item">
                    <div class="faq-question">Which platforms are supported?</div>
                    <div class="faq-answer">
                        We support 1000+ platforms including:
                        <ul>
                            <li>YouTube (Videos, Shorts, Live streams)</li>
                            <li>Facebook (Videos, Reels)</li>
                            <li>Instagram (Posts, Reels, Stories)</li>
                            <li>TikTok (All videos)</li>
                            <li>Twitter/X (Video posts)</li>
                            <li>Dailymotion, Vimeo, Twitch</li>
                            <li>And many more platforms...</li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="ad-banner-bottom">
                Adsterra Banner 728x90
            </div>
        </div>
    </section>

    <div class="modal" id="popupModal">
        <div class="modal-content">
            <h3>Welcome Back!</h3>
            <p>Thanks for using our downloader. Check out our special offers!</p>
            <button class="skip-btn" onclick="skipAd()">Skip Ad</button>
        </div>
    </div>

    <script>
        const AD_REDIRECT_URL = '<?= AD_REDIRECT_URL ?>';
        
        document.addEventListener('DOMContentLoaded', function() {
            const faqQuestions = document.querySelectorAll('.faq-question');
            faqQuestions.forEach(question => {
                question.addEventListener('click', () => {
                    const answer = question.nextElementSibling;
                    const isVisible = answer.style.display === 'block';
                    document.querySelectorAll('.faq-answer').forEach(a => a.style.display = 'none');
                    if (!isVisible) {
                        answer.style.display = 'block';
                    }
                });
            });

            checkReturnFromDownload();
        });

        function goToHomepage() {
            window.location.href = window.location.pathname; 
        }

        function startDownload(downloadLink, quality) {
            sessionStorage.setItem('downloadStarted', 'true');
            
            window.open(AD_REDIRECT_URL, '_blank');
            
            setTimeout(() => {
                window.location.href = downloadLink;
            }, 500); 
        }

        function checkReturnFromDownload() {
            const downloadStarted = sessionStorage.getItem('downloadStarted');
            
            if (downloadStarted === 'true') {
                setTimeout(() => {
                    document.getElementById('popupModal').style.display = 'flex';
                }, 1000);
                
                sessionStorage.removeItem('downloadStarted');
            }
        }

        function skipAd() {
            document.getElementById('popupModal').style.display = 'none';
        }
    </script>
</body>
</html>
```eof

**File Path:** **`style.css`**
```css:Styles:style.css
/* === CUSTOM FONTS === */
* {
    font-family: 'Josefin Sans', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6, .heading {
    font-family: 'Fredoka', sans-serif !important;
}

/* === MAIN STYLES === */
body {
    margin: 0;
    padding: 0;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    min-height: 100vh;
    font-family: 'Josefin Sans', sans-serif;
}

.video-downloader-section {
    color: white;
    padding: 20px 0;
    margin: 0;
    min-height: 100vh;
}

.video-downloader-container {
    max-width: 1200px;
    width: 100%;
    margin: 0 auto;
    padding: 20px;
}

.video-downloader-header {
    text-align: center;
    margin-bottom: 30px;
    cursor: pointer;
}

.video-downloader-header h1 {
    font-size: 3rem;
    margin-bottom: 10px;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    font-family: 'Fredoka', sans-serif;
    transition: all 0.3s ease;
}

.video-downloader-header:hover h1 {
    transform: scale(1.05);
    text-shadow: 0 0 20px rgba(255,255,255,0.5);
}

.video-downloader-header p {
    font-size: 1.2rem;
    opacity: 0.9;
    margin: 0;
}

/* Ad Banners */
.ad-banner-top, .ad-banner-middle, .ad-banner-bottom {
    width: 100%;
    max-width: 728px;
    height: 90px;
    background: #f8f9fa;
    margin: 20px auto;
    border-radius: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 2px dashed #667eea;
    color: #666;
    font-weight: bold;
}

/* Download Form - SaveFrom.net EXACT Style */
.download-form-container {
    background: white;
    padding: 40px;
    border-radius: 15px;
    box-shadow: 0 20px 40px rgba(0,0,0,0.2);
    margin: 30px auto;
    max-width: 800px;
    text-align: center;
}

.form-title {
    color: #333;
    margin-bottom: 25px;
    font-family: 'Fredoka', sans-serif;
    font-size: 1.5rem;
}

.form-group {
    display: flex;
    gap: 0;
    margin-bottom: 20px;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    background: white;
}

.url-input {
    flex: 1;
    padding: 18px 20px;
    border: 2px solid #4CAF50;
    border-right: none;
    border-radius: 8px 0 0 8px;
    font-size: 16px;
    font-family: 'Josefin Sans', sans-serif;
    outline: none;
    background: #f8f9fa;
}

.url-input:focus {
    background: white;
    box-shadow: inset 0 0 0 2px #4CAF50;
}

.fetch-btn {
    background: linear-gradient(135deg, #4CAF50, #45a049);
    color: white;
    border: none;
    padding: 18px 35px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    font-family: 'Fredoka', sans-serif;
    white-space: nowrap;
    transition: all 0.3s ease;
    border-radius: 0 8px 8px 0;
    min-width: 160px;
}

.fetch-btn:hover {
    background: linear-gradient(135deg, #45a049, #4CAF50);
    transform: none;
    box-shadow: 0 3px 15px rgba(76, 175, 80, 0.4);
}

.fetch-btn:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
}

.policy-text {
    color: #666;
    font-size: 0.9rem;
    margin-top: 15px;
}

/* Results Section */
.result-container {
    margin-top: 30px;
    padding: 25px;
    background: #f8f9fa;
    border-radius: 15px;
    border: 2px solid #e9ecef;
}

.video-preview {
    margin-bottom: 25px;
}

.thumbnail-container {
    display: flex;
    gap: 20px;
    align-items: center;
    flex-wrap: wrap;
}

.thumbnail {
    width: 200px;
    height: 120px;
    border-radius: 10px;
    object-fit: cover;
    border: 3px solid #fff;
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.video-info h3 {
    color: #333;
    margin-bottom: 8px;
    font-family: 'Fredoka', sans-serif;
}

.video-info p {
    color: #666;
    font-size: 0.9rem;
    margin: 5px 0;
}

/* Formats Grid */
.formats-section h4 {
    margin-bottom: 15px;
    color: #333;
    font-family: 'Fredoka', sans-serif;
}

.formats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 15px;
}

.format-card {
    background: white;
    padding: 20px;
    border-radius: 10px;
    border: 2px solid #e9ecef;
    transition: all 0.3s ease;
    text-align: center;
}

.format-card:hover {
    border-color: #4CAF50;
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
}

.format-quality {
    font-weight: bold;
    color: #333;
    margin-bottom: 8px;
    font-family: 'Fredoka', sans-serif;
}

.format-size {
    color: #666;
    margin-bottom: 12px;
    font-size: 0.9rem;
}

.download-btn {
    background: linear-gradient(135deg, #2196F3, #1976D2);
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 6px;
    cursor: pointer;
    font-weight: 600;
    transition: all 0.3s ease;
    width: 100%;
    font-family: 'Fredoka', sans-serif;
    font-size: 14px;
}

.download-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 5px 15px rgba(33, 150, 243, 0.3);
}

/* FAQ Section */
.faq-section {
    background: white;
    padding: 40px;
    border-radius: 15px;
    margin: 40px auto;
    max-width: 1000px;
}

.faq-section h2 {
    text-align: center;
    color: #333;
    margin-bottom: 30px;
    font-family: 'Fredoka', sans-serif;
}

.faq-item {
    margin-bottom: 20px;
    border: 1px solid #e9ecef;
    border-radius: 10px;
    overflow: hidden;
}

.faq-question {
    background: #f8f9fa;
    padding: 15px 20px;
    cursor: pointer;
    font-weight: 600;
    color: #333;
    font-family: 'Fredoka', sans-serif;
}

.faq-answer {
    padding: 20px;
    background: white;
    color: #666;
    line-height: 1.6;
    display: none; /* Initial state */
}

/* Popup Modal */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.8);
    z-index: 10000;
    align-items: center;
    justify-content: center;
}

.modal-content {
    background: white;
    padding: 30px;
    border-radius: 15px;
    max-width: 400px;
    width: 90%;
    text-align: center;
}

.modal h3 {
    color: #333;
    margin-bottom: 15px;
    font-family: 'Fredoka', sans-serif;
}

.skip-btn {
    background: #2196F3;
    color: white;
    border: none;
    padding: 12px 25px;
    border-radius: 6px;
    cursor: pointer;
    margin-top: 15px;
    font-family: 'Fredoka', sans-serif;
}

/* Utility Classes */
.hidden {
    display: none !important;
}

.error-container {
    padding: 15px;
    background: #f8d7da;
    color: #721c24;
    border-radius: 10px;
    margin: 15px 0;
    border: 1px solid #f5c6cb;
}

.success-container {
    padding: 15px;
    background: #d1edff;
    color: #0c5460;
    border-radius: 10px;
    margin: 15px 0;
    border: 1px solid #bee5eb;
}

/* Responsive Design */
@media (max-width: 768px) {
    .video-downloader-header h1 {
        font-size: 2rem;
    }
    
    .form-group {
        flex-direction: column;
        border-radius: 8px;
    }
    
    .url-input {
        border-radius: 8px 8px 0 0;
        border-right: 2px solid #4CAF50;
        border-bottom: none;
    }
    
    .fetch-btn {
        width: 100%;
        border-radius: 0 0 8px 8px;
    }
    
    .thumbnail-container {
        flex-direction: column;
        text-align: center;
    }
    
    .ad-banner-top, .ad-banner-middle, .ad-banner-bottom {
        height: 70px;
    }
}
```eof

**File Path:** **`composer.json`**
```json:Composer Configuration:composer.json
{
    "name": "media-downloader/app",
    "description": "A simple PHP video downloader application for Beanstalk.",
    "require": {}
}
```eof

---

## Final Deployment Steps

1.  **Structure Banayein:** Apne local system par, `index.php`, `style.css`, aur `composer.json` ko ek naye folder (example: `downloader-app`) mein rakhein. Phir, is folder ke andar yeh naya structure banayein: `downloader-app/.platform/nginx/conf.d/`.
2.  **Configuration File Rakhein:** `01_phproot.conf` file ko is naye directory mein rakhein.
3.  **ZIP File Banayein:** `downloader-app` folder ke **contents** ko (na ki folder ko) **ZIP** karein. (Yaani, ZIP kholne par aapko seedha `index.php`, `style.css`, aur `.platform` folder dikhna chahiye).
4.  **Upload & Deploy:** Is naye ZIP file ko Elastic Beanstalk par upload karein.
5.  **cURL Check Karein:** Yaqeen (confirm) karein ki Elastic Beanstalk environment ke **Configuration** -> **Software** settings mein **cURL extension** *enabled* hai.

Yeh steps aapke **403 Forbidden** error aur Composer warning dono ko theek kar denge.
